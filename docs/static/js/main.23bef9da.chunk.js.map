{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","aria-label","className","map","page","key","style","cursor","onClick","ListGroup","items","selectedItem","onItemSelect","textProperty","valueProperty","item","defaultProps","Like","liked","handleLike","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","columns","this","label","Component","TableBody","renderCell","content","get","createKey","data","Table","MoviesTable","movie","to","onLike","isLiked","onDelete","SearchBox","value","onChange","type","placeholder","e","currentTarget","Movies","state","selectedGenre","searchQuery","handleDelete","m","setState","index","findIndex","handlePageChange","handleGenreSelect","handleSort","handleSearch","query","getPageData","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","Fragment","Customers","Rentals","NotFound","NavBar","id","Input","error","htmlFor","autoComplete","Select","options","option","Form","errors","validate","Joi","object","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","renderButton","disabled","renderSelect","renderInput","MovieForm","genreId","string","required","number","min","max","componentDidMount","populateGenre","populateMovie","mapToViewModel","movieInDb","find","genresAPI","Date","now","toString","push","saveMovie","history","console","log","movieId","match","params","replace","onSubmit","LoginForm","username","password","RegisterForm","email","minDomainSegments","tlds","allow","App","component","from","exact","Boolean","window","location","hostname","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23bef9da.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            className={`page-item ${page === currentPage ? \"active\" : \"\"}`}\r\n            key={page}\r\n          >\r\n            <button\r\n              style={{ cursor: \"pointer\" }}\r\n              className=\"page-link\"\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nconst ListGroup = ({\r\n  items,\r\n  selectedItem,\r\n  onItemSelect,\r\n  textProperty,\r\n  valueProperty\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          style={{ cursor: \"pointer\" }}\r\n          key={item[valueProperty]}\r\n          className={`list-group-item ${selectedItem === item ? \"active\" : \"\"}`}\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nconst Like = ({ liked, handleLike }) => {\r\n  return (\r\n    <i\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={handleLike}\r\n      className={`fa fa-heart${liked !== true ? \"-o\" : \"\"}`}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead className=\"clickable\">\r\n        <tr>\r\n          {columns.map(column => (\r\n            <th\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    else return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item[this.props.valueProperty] + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns, valueProperty } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item[valueProperty]}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nTableBody.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, onSort, sortColumn, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader\r\n        columns={columns}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n      ></TableHeader>\r\n      <TableBody data={data} columns={columns}></TableBody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like\r\n          handleLike={() => this.props.onLike(movie)}\r\n          liked={movie.isLiked}\r\n        ></Like>\r\n      )\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: movie => (\r\n        <button\r\n          onClick={() => {\r\n            this.props.onDelete(movie);\r\n          }}\r\n          className=\"btn btn-sm btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n      ></Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    ></input>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\n//import { getGenres } from \"../services/genreService\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./common/searchBox\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    genres: [],\r\n    selectedGenre: null,\r\n    searchQuery: \"\",\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n    this.setState({\r\n      movies: getMovies(),\r\n      genres: genres,\r\n      selectedGenre: genres[0]\r\n    });\r\n  }\r\n\r\n  handleDelete = movie => {\r\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = this.state.movies.findIndex(m => m._id === movie._id);\r\n    if (movies[index].isLiked === true) movies[index].isLiked = false;\r\n    else movies[index].isLiked = true;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ selectedGenre: null, searchQuery: query, currentPage: 1 });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      sortColumn,\r\n      searchQuery\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: movies.length, movies };\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      movies: allMovies,\r\n      genres,\r\n      selectedGenre,\r\n      sortColumn,\r\n      searchQuery\r\n    } = this.state;\r\n\r\n    if (allMovies.length === 0) return <h1>there are no movies</h1>;\r\n\r\n    const { totalCount, movies } = this.getPageData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <ListGroup\r\n              items={genres}\r\n              selectedItem={selectedGenre}\r\n              onItemSelect={this.handleGenreSelect}\r\n            ></ListGroup>\r\n          </div>\r\n          <div className=\"col\">\r\n            <Link to=\"/movies/new\" className=\"btn btn-primary mb-2\">\r\n              New Movie\r\n            </Link>\r\n            <h1>there are {totalCount} movies in the database</h1>\r\n            <SearchBox\r\n              value={searchQuery}\r\n              onChange={this.handleSearch}\r\n            ></SearchBox>\r\n            <MoviesTable\r\n              movies={movies}\r\n              onDelete={this.handleDelete}\r\n              onLike={this.handleLike}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n            ></MoviesTable>\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentPage}\r\n            ></Pagination>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <NavLink className=\"navbar-brand\" to=\"/movies\">\r\n        Vidly\r\n      </NavLink>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/register\">\r\n              Register\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nconst Input = ({ name, label, error, ...props }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        {...props}\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control\"\r\n        placeholder={name}\r\n        autoComplete=\"off\"\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nconst Select = ({ name, label, options, error, ...props }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...props} name={name} id={name} className=\"form-control\">\r\n        <option value=\"\"></option>\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const schema = Joi.object(this.schema);\r\n    const { error } = schema.validate(this.state.data, options);\r\n    if (!error) return null;\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = Joi.object({ [name]: this.schema[name] });\r\n    const { error } = schema.validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const error = this.validateProperty(input);\r\n\r\n    const errors = { ...this.state.errors };\r\n    errors[input.name] = error;\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data: data, errors: errors });\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        type={type}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"@hapi/joi\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport { getMovie, saveMovie } from \"../services/fakeMovieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n    errors: {},\r\n    genres: []\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  populateMovie() {\r\n    const movieId = this.props.match.params.id;\r\n    if (movieId === \"new\") return;\r\n\r\n    const movie = getMovie(movieId);\r\n    if (!movie) return this.props.history.replace(\"/not-found\");\r\n\r\n    this.setState({ data: this.mapToViewModel(movie) });\r\n  }\r\n\r\n  populateGenre() {\r\n    const genres = getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.populateGenre();\r\n    this.populateMovie();\r\n  };\r\n\r\n  mapToViewModel = movie => {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  };\r\n\r\n  doSubmit = () => {\r\n    saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n    console.log(\"submitted Movie Form\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Form from \"./common/form\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = () => {\r\n    console.log(\"submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"@hapi/joi\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\")\r\n      .email({ minDomainSegments: 2, tlds: { allow: [\"com\", \"net\"] } }),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n      .min(5),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = () => {\r\n    console.log(\"submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"email\")}\r\n          {this.renderInput(\"password\", \"Psername\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/movies\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ToastContainer></ToastContainer>\n      <NavBar></NavBar>\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/register\" component={RegisterForm}></Route>\n          <Route path=\"/login\" component={LoginForm}></Route>\n          <Route path=\"/movies/:id\" component={MovieForm}></Route>\n          <Route path=\"/movies\" component={Movies}></Route>\n          <Route path=\"/customers\" component={Customers}></Route>\n          <Route path=\"/rentals\" component={Rentals}></Route>\n          <Route path=\"/not-found\" component={NotFound}></Route>\n          <Redirect from=\"/\" to=\"/movies\" exact></Redirect>\n          <Redirect to=\"/not-found\"></Redirect>\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(process.env);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}